@page
@model LoginModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Login V18</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/png" href="images/icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="vendor/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="fonts/font-awesome-4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="fonts/Linearicons-Free-v1.0.0/icon-font.min.css">
    <link rel="stylesheet" type="text/css" href="vendor/animate/animate.css">
    <link rel="stylesheet" type="text/css" href="vendor/css-hamburgers/hamburgers.min.css">
    <link rel="stylesheet" type="text/css" href="vendor/animsition/css/animsition.min.css">
    <link rel="stylesheet" type="text/css" href="vendor/select2/select2.min.css">
    <link rel="stylesheet" type="text/css" href="vendor/daterangepicker/daterangepicker.css">
    <link rel="stylesheet" type="text/css" href="css/util.css">
    <link rel="stylesheet" type="text/css" href="css/main.css">
</head>

<body style="background-color: #666666;">

    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <form id="login-form" method="post" class="login100-form validate-form">
                    <span class="login100-form-title p-b-43">
                        Đăng nhập
                    </span>

                    <div class="text-danger" asp-validation-summary="All"></div>
                    <div class="wrap-input100 validate-input">
                        <input id="Credential_Email" class="input100" type="email" asp-for="Credential.Email">
                        <span class="focus-input100"></span>
                        <span class="label-input100">Email</span>
                        <span class="text-danger" asp-validation-for="Credential.Email"></span>
                    </div>

                    <div class="wrap-input100 validate-input">
                        <input id="Credential_Password" class="input100" type="password" asp-for="Credential.Password">
                        <span class="focus-input100"></span>
                        <span class="label-input100">Mật khẩu</span>
                        <span class="text-danger" asp-validation-for="Credential.Password"></span>
                    </div>


                    <div class="flex-sb-m w-full p-t-3 p-b-32">
                        <div>
                            <a href="/forgotpassword" class="txt1">
                                Quên mật khẩu?
                            </a>
                        </div>
                    </div>

                    <div class="container-login100-form-btn">
                        <button class="login100-form-btn" type="submit">
                            Đăng nhập
                        </button>
                    </div>

                    <div class="text-center p-t-46 p-b-20">
                        <span class="txt2">
                            hoặc <a href="/SignUp">Đăng ký ở đây</a>
                        </span>
                    </div>
                </form>

                <div class="login100-more" style="background-image: url('img/bg-01.jpg');"></div>
            </div>
        </div>
    </div>

    <script src="vendor/jquery/jquery-3.2.1.min.js"></script>
    <script src="vendor/animsition/js/animsition.min.js"></script>
    <script src="vendor/bootstrap/js/popper.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.min.js"></script>
    <script src="vendor/select2/select2.min.js"></script>
    <script src="vendor/daterangepicker/moment.min.js"></script>
    <script src="vendor/daterangepicker/daterangepicker.js"></script>
    <script src="vendor/countdowntime/countdowntime.js"></script>
    <script src="js/main.js"></script>

    <script>
        $(document).ready(function () {
            $('.input100').each(function () {
                if ($(this).val().trim() !== "") {
                    $(this).addClass('has-val');
                }
            });

            $('.input100').on('blur', function () {
                if ($(this).val().trim() !== "") {
                    $(this).addClass('has-val');
                } else {
                    $(this).removeClass('has-val');
                }
            });
        });


        document.addEventListener('DOMContentLoaded', function () {
            const token = sessionStorage.getItem('token');
            console.log('Token from sessionStorage:', token);
            if (token) {
                // Fetch the cart from the backend
                fetch('http://localhost:5215/odata/Cart', {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                }).then(response => {
                    console.log('Cart API response status:', response.status);
                    return response.json();
                })
                    .then(cartData => {
                        console.log('Cart data fetched from API:', cartData);
                        const cartItems = cartData.$values || [];
                        const formattedCartItems = cartItems.map(item => ({
                            id: item.milkId,
                            name: item.milk.name,
                            price: item.milk.price,
                            imageUrl: item.milk.imageUrl,
                            quantity: item.quantity
                        }));
                        console.log('Formatted cart items:', formattedCartItems);
                        sessionStorage.setItem('cart', JSON.stringify(formattedCartItems));
                        updateCartCount();
                        updateCartTotalPrice();
                    }).catch(error => {
                        console.error('Failed to fetch cart:', error);
                    });
            }
        });

        async function updateCartCount() {
            let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
            let count = cart.reduce((sum, item) => sum + item.quantity, 0);
            document.getElementById('cart-count').innerText = count;
        }

        async function updateCartTotalPrice() {
            let cart = JSON.parse(sessionStorage.getItem('cart')) || [];
            let totalPrice = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            document.getElementById('cart-total').innerText = `${formatCurrency(totalPrice)} đ`;
        }

        function formatCurrency(amount) {
            return amount.toFixed(0).replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }
    </script>




</body>
</html>
