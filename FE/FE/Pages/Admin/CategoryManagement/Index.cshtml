@page
@model FE.Pages.Admin.CategoryManagement.IndexModel
@{
}

<div class="card mb-4">
    <div class="card-header">
        <i class="fas fa-table me-1"></i>
        Quản lý loại sữa
    </div>
    <div class="p-4">
        <a href="/admin/categorymanagement/create" class="btn btn-success" id="btnCreateCategory">
            Tạo mới loại sữa
        </a>
    </div>
    <div class="card-body">
        <table class="table" id="categoryTable">
            <thead>
                <tr>
                    <th>Mã</th>
                    <th>Tên</th>
                    <th>Giới thiệu</th>
                    <th></th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>Mã</th>
                    <th>Tên</th>
                    <th>Giới thiệu</th>
                    <th></th>
                </tr>
            </tfoot>
            <tbody class="font-weight-light">
                @foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Id</td>
                        <td>@category.Name</td>
                        <td>@category.Description</td>
                        <td><a href="/admin/categorymanagement/update?id=@category.Id" class="btn btn-primary text-white">Cập nhật</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Thêm loại sữa</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="createForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="createName" class="form-label">Tên: </label>
                        <input type="text" class="form-control" required id="createName">
                    </div>
                    <div class="mb-3">
                        <label for="createName" class="form-label">Giới thiệu: </label>
                        <input type="text" class="form-control" required id="createDescription">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="createCategory">Tạo</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Cập nhật</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="updateForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="updateId" class="form-label">Mã: </label>
                        <input type="text" class="form-control" disabled id="updateId">
                    </div>
                    <div class="mb-3">
                        <label for="updateName" class="form-label">Tên: </label>
                        <input type="text" class="form-control" required id="updateName">
                    </div>
                    <div class="mb-3">
                        <label for="updateName" class="form-label">Giới thiệu: </label>
                        <input type="text" class="form-control" required id="updateDescription">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="button" class="btn btn-primary" id="updateCategory">Cập nhật</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index:9999;">
    <div id="errorToast" class="toast bg-danger" role="alert" aria-live="assertive" aria-atomic="true" style=" width: 400px; height:200px;">
        <div class="toast-header">
            <strong class="me-auto fs-2">Notification</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body fs-3 text-white" id="errorToastContent">
        </div>
    </div>
</div>

@* @section Scripts {
    @{
    @using Helpers;
    @using Models;

        var user = SessionHelper.GetObjectFromJson<User>(HttpContext.Session, "user");
        string token = null;
        if (user != null)
        {
            token = user.Token;
        }
    }
    <script>
        $(document).ready(function () {
            const toastLiveExample = document.getElementById('errorToast');
            const toastContent = document.getElementById('errorToastContent');
            const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample);
            function ShowErrorToast(message = 'Something went wrong') {

                toastContent.innerHTML = `<strong> ${message} </strong>`;
                toastBootstrap.show();
            }
            var categoryTable;
            GetCategories();
            function GetCategories() {
                categoryTable = $('#categoryTable').DataTable({
                    ajax: {
                        url: 'http://localhost:5215/odata/Category',
                        dataSrc: '$values'
                    },
                    columns: [
                        { data: 'id' },
                        { data: 'name' },
                        { data: 'description' },
                        {
                            data: null,
                            defaultContent: '<button class="btn btn-primary edit">Cập nhật</button>',
                            orderable: false
                        }
                    ]
                });
            }
            // function GetSuppliers() {
            //     $('#supplierTable tbody').html("");
            //     $.ajax({
            //         url: "http://localhost:5215/odata/Supplier",
            //         type: 'get',
            //         contentType: 'application/json',
            //         headers: {
            //             'Authorization': 'Bearer ' + '@token'
            //         },
            //         success: function (result, status, xhr) {
            //             console.log(result);
            //             $.each(result.$values, function (index, value) {
            //                 var appendElement = $("<tr>");
            //                 appendElement.append($("<td>").html(value['id']));
            //                 appendElement.append($("<td>").html(value['name']));
            //                 appendElement.append($("<td>").html('<button class=\'btn btn-primary edit\'>Edit</button>'));
            //                 $("#supplierTable tbody").append(appendElement);
            //             });
            //         },
            //         error: function (xhr, status, error) {
            //             if (xhr.status === 401) {
            //                 ShowErrorToast('Unauthorized');
            //             } else if (xhr.status === 404) {
            //                 ShowErrorToast();
            //             }
            //         }
            //     });
            // }
            $('#categoryTable').on('click', "button.edit", function () {
                var categoryId = $(this).parents("tr").find("td:nth-child(1)").text();
                $.ajax({
                    url: `http://localhost:5215/odata/Category/${categoryId}`,
                    type: 'get',
                    contentType: 'application/json',
                    headers: {
                        'Authorization': 'Bearer ' + '@token'
                    },
                    success: function (result, status, xhr) {
                        $('#updateId').val(result['id']);
                        $('#updateName').val(result['name']);
                        $('#updateDescription').val(result['description']);
                    },
                    error: function (xhr, status, error) {
                        ShowErrorToast();
                    }
                });
                $('#updateModal').modal('show');
            });
            document.getElementById('btnCreateCategory').addEventListener('click', function () {
                $('#exampleModal').modal('show');
            });
            var addedCategory = {};
            document.getElementById('createCategory').addEventListener('click', function () {
                addedCategory = {
                    name: $("#createName").val(),
                    description: $("#createDescription").val(),
                };
                if (!addedCategory.name) {
                    ShowErrorToast("Vui lòng nhập tất cả trường");
                } else {
                    $.ajax({
                        url: "http://localhost:5215/odata/Category",
                        type: 'post',
                        data: JSON.stringify(addedCategory),
                        processData: false,
                        contentType: "application/json",
                        headers: {
                            'Authorization': 'Bearer ' + '@token'
                        },
                        success: function (result, status, xhr) {
                            document.getElementById("createForm").reset();
                            categoryTable.ajax.reload(null, false);
                            $('#exampleModal').modal('hide');
                        },
                        error: function (xhr, status, error) {
                            ShowErrorToast();
                        }
                    });
                }
            });
            var updateCategory = {};
            document.getElementById('updateCategory').addEventListener('click', function () {
                updateCategory = {
                    id: $("#updateId").val(),
                    name: $("#updateName").val(),
                    description: $("#updateDescription").val()
                };
                if (!updateCategory.id || !updateCategory.name || !updateCategory.description) {
                    ShowErrorToast("Vui lòng nhập tất cả trường");
                } else {
                    $.ajax({
                        url: `http://localhost:5215/odata/Category/${updateCategory.id}`,
                        type: 'put',
                        data: JSON.stringify(updateCategory),
                        processData: false,
                        contentType: "application/json",
                        headers: {
                            'Authorization': 'Bearer ' + '@token'
                        },
                        success: function (result, status, xhr) {
                            categoryTable.ajax.reload(null, false);
                            $('#updateModal').modal('hide');
                        },
                        error: function (xhr, status, error) {
                            ShowErrorToast();
                        }
                    });
                }
            });
        });
    </script>
}
 *@

