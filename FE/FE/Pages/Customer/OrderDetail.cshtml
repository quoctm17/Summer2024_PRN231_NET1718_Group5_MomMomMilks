@page
@model FE.Pages.Customer.OrderDetailModel
@{
    ViewData["Title"] = "Order Detail";
}
<style>
    .sidebar {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        height: fit-content;
    }

    .main-content {
        padding: 20px;
        height: fit-content;
    }

    .sidebar a {
        text-decoration: none;
        display: block;
        padding: 10px 15px;
        color: #333;
    }

        .sidebar a:hover {
            background-color: #ddd;
        }
</style>
@{
    @using Helpers
    @using Models
    var account = SessionHelper.GetObjectFromJson<User>(HttpContext.Session, "user");
    if (account == null)
    {
        RedirectToPage("/Login");
    }
}
<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-2 col-md-3 sidebar bg-light pt-4">
            <div class="text-center mb-4">
                @if (account != null)
                {
                    <h5>@account.UserName</h5>
                }
            </div>
            <div class="list-group list-group-flush">
                <a asp-page="/Customer/UserInformation" asp-route-userId="@account?.Id" class="list-group-item list-group-item-action rounded">Thông tin của tôi</a>
                <a href="/Customer/OrderHistory?userId=@account?.Id" class="list-group-item list-group-item-action rounded">Đơn hàng</a>
                <a asp-page="/Customer/UserAddress" class="list-group-item list-group-item-action rounded">Địa chỉ</a>
                <a href="#" class="list-group-item list-group-item-action rounded">Coupon</a>
            </div>
        </div>
        <!-- Main Content -->
        <div class="col-lg-10 col-md-9 main-content pt-4">
            <h3 class="mb-4">Order Detail</h3>
            <div class="text-center mt-4">
                @if (Model.OrderDetailHistory != null && Model.OrderDetailHistory.Any())
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Ngày mua</th>
                                <th>Sửa vào ngày</th>
                                <th>Số lượng</th>
                                <th>Tiền</th>
                                <th>Giảm giá</th>
                                <th>Tổng tiền</th>
                                <th>Hoàn trả</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.OrderDetailHistory)
                            {
                                <tr>
                                    <td>@order.MilkName</td>
                                    <td>@order.CreateAt.ToString("dd/MM/yyyy")</td>
                                    <td>@order.UpdateAt.ToString("dd/MM/yyyy")</td>
                                    <td>@order.Quantity</td>
                                    <td>@order.Price</td>
                                    <td>@order.Discount</td>
                                    <td>@order.Total</td>
                                    <td><input type="checkbox" class="refund-checkbox" data-order-id="@order.Id"></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <button id="submitRefunds" class="btn btn-primary mt-4">Hoàn trả</button>
                <hr/>
                }
                <a href="/Customer/OrderHistory?userId=@account.Id" class="btn btn-primary">Trở về lịch sử đơn hàng</a>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="refundModal" tabindex="-1" role="dialog" aria-labelledby="refundModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="refundModalLabel">Nhập lý do hoàn trả</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="refundForm">
                    <div class="form-group">
                        <label for="refundReason">Lý do</label>
                        <input type="text" class="form-control" id="refundReason" required>
                    </div>
                    <input type="hidden" id="orderDetailId">
                    <button type="submit" class="btn btn-primary">Hoàn trả</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Thoát</button>
                </form>
            </div>
        </div>
    </div>
</div>

@* <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script> *@
<script>
    let refundList = [];
    let currentOrderDetailId = null;

    async function submitRefundList(refundList) {
        const url = `http://localhost:5215/odata/Order/Refund`;
        const token = sessionStorage.getItem('token');
        if (token) {
            try {
                const response = await fetch(url, {
                    method: 'PUT',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(refundList)
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const result = await response.json();
                if (result) {
                    console.log('Orders refunded successfully:', result);
                    alert('Orders refunded successfully.');
                    location.reload();
                } else {
                    console.log('Failed to refund the orders:', result);
                    alert('Failed to refund the orders.');
                }
            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
                alert('Failed to refund your orders.');
            }
        } else {
            alert('User is not logged in.');
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        const refundCheckboxes = document.querySelectorAll('.refund-checkbox');
        refundCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                if (this.checked) {
                    currentOrderDetailId = this.getAttribute('data-order-id');
                    document.getElementById('orderDetailId').value = currentOrderDetailId;
                    $('#refundModal').modal('show');
                }
            });
        });

        const refundForm = document.getElementById('refundForm');
        refundForm.addEventListener('submit', function (event) {
            event.preventDefault();
            const orderDetailId = document.getElementById('orderDetailId').value;
            const reason = document.getElementById('refundReason').value;

            
            refundList.push({ OrderDetailId: orderDetailId, note: reason });

            
            document.querySelector(`.refund-checkbox[data-order-id="${orderDetailId}"]`).checked = true;
            $('#refundModal').modal('hide');
        });

        $('#refundModal').on('hide.bs.modal', function () {
            if (!refundList.find(refund => refund.OrderDetailId == currentOrderDetailId)) {
                
                document.querySelector(`.refund-checkbox[data-order-id="${currentOrderDetailId}"]`).checked = false;
            }
            
            document.getElementById('refundReason').value = '';
            currentOrderDetailId = null;
        });

        const submitRefundsButton = document.getElementById('submitRefunds');
        submitRefundsButton.addEventListener('click', function () {
            if (refundList.length > 0) {
                submitRefundList(refundList);
            } else {
                alert('No orders selected for refund.');
            }
        });
    });
</script>



